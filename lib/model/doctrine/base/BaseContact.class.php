<?php

/**
 * BaseContact
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $email
 * @property clob $comments
 * @property clob $referer
 * @property varchar $host
 * @property varchar $keywords
 * 
 * @method string  getName()     Returns the current record's "name" value
 * @method string  getEmail()    Returns the current record's "email" value
 * @method clob    getComments() Returns the current record's "comments" value
 * @method clob    getReferer()  Returns the current record's "referer" value
 * @method varchar getHost()     Returns the current record's "host" value
 * @method varchar getKeywords() Returns the current record's "keywords" value
 * @method Contact setName()     Sets the current record's "name" value
 * @method Contact setEmail()    Sets the current record's "email" value
 * @method Contact setComments() Sets the current record's "comments" value
 * @method Contact setReferer()  Sets the current record's "referer" value
 * @method Contact setHost()     Sets the current record's "host" value
 * @method Contact setKeywords() Sets the current record's "keywords" value
 * 
 * @package    citations
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContact extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contact');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('comments', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('referer', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('host', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('keywords', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}