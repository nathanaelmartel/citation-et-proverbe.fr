<?php

/**
 * BaseCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $meta_title
 * @property string $meta_keyword
 * @property string $meta_description
 * @property int $is_active
 * @property CategoryExpression $Expressions
 * 
 * @method string             getName()             Returns the current record's "name" value
 * @method string             getMetaTitle()        Returns the current record's "meta_title" value
 * @method string             getMetaKeyword()      Returns the current record's "meta_keyword" value
 * @method string             getMetaDescription()  Returns the current record's "meta_description" value
 * @method int                getIsActive()         Returns the current record's "is_active" value
 * @method CategoryExpression getExpressions()      Returns the current record's "Expressions" value
 * @method Category           setName()             Sets the current record's "name" value
 * @method Category           setMetaTitle()        Sets the current record's "meta_title" value
 * @method Category           setMetaKeyword()      Sets the current record's "meta_keyword" value
 * @method Category           setMetaDescription()  Sets the current record's "meta_description" value
 * @method Category           setIsActive()         Sets the current record's "is_active" value
 * @method Category           setExpressions()      Sets the current record's "Expressions" value
 * 
 * @package    citations
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('category');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('meta_title', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('meta_keyword', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('meta_description', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('is_active', 'int', null, array(
             'type' => 'int',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CategoryExpression as Expressions', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($sluggable0);
        $this->actAs($timestampable0);
    }
}